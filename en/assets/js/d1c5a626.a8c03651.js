"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[337],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="Docker installation",l={unversionedId:"system-installation/docker_installation",id:"system-installation/docker_installation",title:"Docker installation",description:"Linux environment preparation",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/system-installation/docker_installation.md",sourceDirName:"system-installation",slug:"/system-installation/docker_installation",permalink:"/en/docs/system-installation/docker_installation",draft:!1,editUrl:"https://github.com/ThingsPanel/thingspanel.github.io/tree/source/docs/system-installation/docker_installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Environmental requirements",permalink:"/en/docs/system-installation/environmental_requirement"},next:{title:"\u4f7f\u7528\u6e90\u7801\u5b89\u88c5\u542f\u52a8ThingsPanel",permalink:"/en/docs/system-installation/source_code.installation"}},s={},p=[{value:"Linux environment preparation",id:"linux-environment-preparation",level:2},{value:"Start the installation",id:"start-the-installation",level:2},{value:"Mount instructions",id:"mount-instructions",level:2},{value:"View the container run logs",id:"view-the-container-run-logs",level:2},{value:"Precautions",id:"precautions",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker-installation"},"Docker installation"),(0,r.kt)("h2",{id:"linux-environment-preparation"},"Linux environment preparation"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Install",(0,r.kt)("inlineCode",{parentName:"p"},"Docker Desktop"),"and",(0,r.kt)("inlineCode",{parentName:"p"},"git"),"in a windows environment.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u5b89\u88c5docker\uff08centos\uff09")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\ndnf install docker-ce docker-ce-cli containerd.io\nsystemctl start docker.service\nsystemctl enable docker.service\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Install docker-compose")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},'curl -L "https://github.com/docker/compose/releases/download/v2.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"If git is not installed")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"dnf install git -y\n")))),(0,r.kt)("h2",{id:"start-the-installation"},"Start the installation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Pull items")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"# Pull docker configuration\ngit clone https://github.com/ThingsPanel/thingsPanel-go-docker.git\ncd thingsPanel-go-docker\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Run the project")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"In the",(0,r.kt)("inlineCode",{parentName:"p"},"thingsPanel-go-docker"),"directory (win needs to open",(0,r.kt)("inlineCode",{parentName:"p"},"cmd")," window) "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"    # Start a project in the foreground mode with a log display (default account and password super@super.cn 123456) (default port 8080)\n    docker-compose -f docker-compose.yml up\n    # Or start the project in a way that hides the log display\n    docker-compose -f docker-compose.yml up -d\n    # stop service\n    docker-compose -f docker-compose.yml down\n"))))),(0,r.kt)("h2",{id:"mount-instructions"},"Mount instructions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"View mounted volumes (followed by non-./beginning directories are volumes)")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Docker volume ls\ndocker volume inspect xxx\nthingspanel-go #\u540e\u7aef\nthingspanel-html #\u524d\u7aef\nthingspanel-postgres #\u6570\u636e\u5e93\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"System logs")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./init_files/backend/logs/\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Plugin directory")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"There is no need to restart the container "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    thingspanel-go/extensions/\n")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Back-end code directory")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Here you can update and compile your code, and then restart the backend container after compilation "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    thingspanel-go\n")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"The front-end code directory")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"You can place the vue packaged files here and restart the front-end container "),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    thingspanel-html\n"))))),(0,r.kt)("h2",{id:"view-the-container-run-logs"},"View the container run logs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"docker logs -f containerID\nor\n./init_files/files/log/\n")),(0,r.kt)("h2",{id:"precautions"},"Precautions"),(0,r.kt)("p",null,"Port\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"8080 (front-end service port)\n9998 (tcp port)\n9999 (API port)\n1883 (mqtt port)\n5432 (postogresql port)\n6379 (redis port)\n")),(0,r.kt)("admonition",{title:"\u8bbe\u5907\u5bf9\u63a5",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u8bbe\u5907\u63a5\u5165\u8bf7\u53c2\u8003 ",(0,r.kt)("a",{parentName:"p",href:"../equipment-access/mqtt"},(0,r.kt)("inlineCode",{parentName:"a"},"mqtt\u5bf9\u63a5")))))}m.isMDXComponent=!0}}]);